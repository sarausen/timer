{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nconst endDate = new Date('2023-05-13T12:00:00');\n\n// function Timer() {\n//   const [timeLeft, setTimeLeft] = useState('');\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       const now = new Date().getTime();\n//       const distance = endDate - now;\n\n//       if (distance < 0) {\n//         clearInterval(interval);\n//         setTimeLeft('00 | 00 | 00 | 00');\n//       } else {\n//         const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n//         const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n//         const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n//         const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n//         setTimeLeft(`${days} days | ${hours} hours | ${minutes} minutes | ${seconds} seconds`);\n//       }\n//     }, 1000);\n\n//     return () => clearInterval(interval);\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2></h2>\n//       <p>{timeLeft}</p>\n\n//     </div>\n//   );\n// }\n\n// export default Timer;","map":{"version":3,"names":["React","useState","useEffect","endDate","Date"],"sources":["C:/Users/user/Desktop/suusar/dodo/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst endDate = new Date('2023-05-13T12:00:00');\r\n\r\n\r\n// function Timer() {\r\n//   const [timeLeft, setTimeLeft] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const interval = setInterval(() => {\r\n//       const now = new Date().getTime();\r\n//       const distance = endDate - now;\r\n      \r\n//       if (distance < 0) {\r\n//         clearInterval(interval);\r\n//         setTimeLeft('00 | 00 | 00 | 00');\r\n//       } else {\r\n//         const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n//         const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n//         const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n//         const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n        \r\n//         setTimeLeft(`${days} days | ${hours} hours | ${minutes} minutes | ${seconds} seconds`);\r\n//       }\r\n//     }, 1000);\r\n    \r\n//     return () => clearInterval(interval);\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2></h2>\r\n//       <p>{timeLeft}</p>\r\n      \r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Timer;\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAAC,qBAAqB,CAAC;;AAG/C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}