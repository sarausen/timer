{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\n\n// export default class Timer extends  React.Component {\n//     render() {\n//         return (\n\n//         );\n//     }\n// }\n\n// function Timer({ expirationDate }) {\n//     const [timeLeft, setTimeLeft] = useState(null);\n\n//     useEffect(() => {\n//       const intervalId = setInterval(() => {\n//         const now = new Date().getTime();\n//         const distance = new Date(expirationDate) - now;\n\n//         if (distance < 0) {\n//           clearInterval(intervalId);\n//           setTimeLeft(\"Expired!\");\n//         } else {\n//           const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n//           const hours = Math.floor(\n//             (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n//           );\n//           const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n//           const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n//           setTimeLeft(`${days}d ${hours}h ${minutes}m ${seconds}s`);\n//         }\n//       }, 1000);\n\n//       return () => clearInterval(intervalId);\n//     }, [expirationDate]);\n\n//     return <div>{timeLeft}</div>;\n//   }","map":{"version":3,"names":["React","useState","useEffect"],"sources":["C:/Users/user/Desktop/suusar/dodo/src/components/Timer.js"],"sourcesContent":["\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// export default class Timer extends  React.Component {\r\n//     render() {\r\n//         return (\r\n\r\n           \r\n//         );\r\n//     }\r\n// }\r\n\r\n// function Timer({ expirationDate }) {\r\n//     const [timeLeft, setTimeLeft] = useState(null);\r\n  \r\n//     useEffect(() => {\r\n//       const intervalId = setInterval(() => {\r\n//         const now = new Date().getTime();\r\n//         const distance = new Date(expirationDate) - now;\r\n  \r\n//         if (distance < 0) {\r\n//           clearInterval(intervalId);\r\n//           setTimeLeft(\"Expired!\");\r\n//         } else {\r\n//           const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n//           const hours = Math.floor(\r\n//             (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n//           );\r\n//           const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n//           const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n//           setTimeLeft(`${days}d ${hours}h ${minutes}m ${seconds}s`);\r\n//         }\r\n//       }, 1000);\r\n  \r\n//       return () => clearInterval(intervalId);\r\n//     }, [expirationDate]);\r\n  \r\n//     return <div>{timeLeft}</div>;\r\n//   }\r\n  "],"mappings":"AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}